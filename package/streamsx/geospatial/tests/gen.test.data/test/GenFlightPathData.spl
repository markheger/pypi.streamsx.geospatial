namespace test;

use com.ibm.streams.geospatial::FlightPathEncounterTypes;

public composite GenFlightPathData (output Events) {
		
	graph

		// generate testdata 
		stream<FlightPathEncounterTypes.EncounterEvent> Events = Custom() { 
			logic
			onProcess: {
				mutable FlightPathEncounterTypes.EncounterEvent ev = {}; 
				ev.observation.entityId = "plane1";
				ev.observation.latitude =  52.520008f;
				ev.observation.longitude =  13.404954f;
				ev.observation.altitude =  1000.0;
				ev.observation.observationTime = 1233l;
				ev.observation.azimuth = 0.0f;
				ev.observation.groundSpeed = 0.0;
				ev.observation.altitudeChangeRate = 0.0;
				submit(ev, Events);

				mutable FlightPathEncounterTypes.EncounterEvent ev2 = {}; 
				ev2.observation.entityId = "plane2";
				ev2.observation.latitude =  52.520008f;
				ev2.observation.longitude =  13.404954f;
				ev2.observation.altitude =  1000.0;
				ev2.observation.observationTime = 1234l;
				ev2.observation.azimuth = 0.0f;
				ev2.observation.groundSpeed = 0.0;
				ev2.observation.altitudeChangeRate = 0.0;
				submit(ev2, Events);				
			}
		}

}

public composite DumpData (input Events; output Result) {
		
	graph

		stream<rstring string> Result = Custom(Events as I){
			logic
			onTuple I : {
				printStringLn((rstring)I);
				submit ({string="ok"}, Result);
			}
		}
}
